TOOL SELECTION OPTIONS
The single most important option.

--tool=<toolname> [default: memcheck]
   Run the Valgrind tool called toolname, e.g. memcheck, cachegrind, callgrind, helgrind, drd, massif,
   lackey, none, exp-sgcheck, exp-bbv, exp-dhat, etc.

1、memcheck： 分析内存
2、callgrind：    分析程序性能。
3、cachegrind：	分析cache.
4、helgrind：     分析多线程竞争。
5、massif：       分析堆。


Callgrind
-----------------------------------------------------------------------------------
Callgrind收集程序运行时的一些数据，函数调用关系等信息，还可以有选择地进行cache模拟。
在运行结束时，它会把分析数据写入一个文件。callgrind_annotate可以把这个文件的内容转化
成可读的形式。


Cachegrind
-----------------------------------------------------------------------------------
它模拟 CPU中的一级缓存I1,D1和L2二级缓存，能够精确地指出程序中 
cache的丢失和命中。如果需要，它还能够为我们提供cache丢失次数，内存引用次数，以及每
行代码，每个函数，每个模块，整个程序产生的指令数。这对优化程序有很大的帮助。


Helgrind
-----------------------------------------------------------------------------------
它主要用来检查多线程程序中出现的竞争问题。Helgrind寻找内存中被多个线程访问，而又没
有一贯加锁的区域，这些区域往往是线程之间失去同步的地方，而且会导致难以发掘的错误。
Helgrind实现了名为” Eraser” 的竞争检测算法，并做了进一步改进，减少了报告错误的次数。


Massif
-----------------------------------------------------------------------------------
堆栈分析器，它能测量程序在堆栈中使用了多少内存，告诉我们堆块，堆管理块和栈的大小。
Massif能帮助我们减少内存的使用，在带有虚拟内存的现代系统中，它还能够加速我们程序的
运行，减少程序停留在交换区中的几率。
