MALLOC_GET_STATE(3)                         Linux Programmer's Manual                        MALLOC_GET_STATE(3)



NAME
       malloc_get_state, malloc_set_state - record and restore state of malloc implementation

SYNOPSIS
       #include <stdlib.h>

       void* malloc_get_state(void);

       int malloc_set_state(void *state);

DESCRIPTION
       The malloc_get_state() function records the current state of all malloc(3) internal bookkeeping variables
       (but not the actual contents of the heap or the state of malloc_hook(3) functions pointers).   The  state
       is  recorded  in  a  system-dependent  opaque  data  structure dynamically allocated via malloc(3), and a
       pointer to that data structure is returned as the function result.  (It is the caller's responsibility to
       free(3) this memory.)
       
		malloc_get_state() 函数记录所有当前状态  
		alloc(3) 内部簿记变量（但不是堆的实际内容或 malloc_hook(3) 函数指针的状态）。 
		该状态记录在通过 malloc(3) 动态分配的与系统相关的不透明数据结构中，并返回指向该数据结构的指针作为函数结果。 
		（ free(3) 此内存是调用者的责任。）

       The malloc_set_state() function restores the state of all malloc(3) internal bookkeeping variables to the
       values recorded in the opaque data structure pointed to by state.

RETURN VALUE
       On success, malloc_get_state() returns a pointer to a newly allocated opaque不透明 data  structure.   On  error
       (for example, memory could not be allocated for the data structure), malloc_get_state() returns NULL.

       On  success,  malloc_set_state() returns 0.  If the implementation detects that state does not point to a
       correctly formed data structure, malloc_set_state() returns -1.  If the implementation detects  that  the
       version  of  the  data  structure  referred to by state is a more recent version than this implementation
       knows about, malloc_set_state() returns -2.

CONFORMING TO
       These functions are GNU extensions.

NOTES
       These functions are especially useful when using this  malloc(3)  implementation  as  part  of  a  shared
       library,  and  the heap contents are saved/restored via some other method.  This technique is used by the
       GNU Emacs to implement its "dumping" function.

       Hook function pointers are never saved or restored by these functions, with  two  exceptions:  if  malloc
       checking  (see  mallopt(3)) was in use when malloc_get_state() was called, then malloc_set_state() resets
       malloc checking hooks if possible; if malloc checking was not in use in the recorded state, but the call‐
       er has requested malloc checking, then the hooks are reset to 0.

SEE ALSO
       malloc(3), mallopt(3)

COLOPHON
       This  page  is  part  of  release 3.53 of the Linux man-pages project.  A description of the project, and
       information about reporting bugs, can be found at http://www.kernel.org/doc/man-pages/.



GNU                                                2012-05-04                                MALLOC_GET_STATE(3)
