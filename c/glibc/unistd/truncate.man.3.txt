TRUNCATE(3P)                                POSIX Programmer's Manual                               TRUNCATE(3P)



PROLOG
       This  manual  page  is part of the POSIX Programmer's Manual.  The Linux implementation of this interface
       may differ (consult the corresponding Linux manual page for details of Linux behavior), or the  interface
       may not be implemented on Linux.

NAME
       truncate - truncate a file to a specified length

SYNOPSIS
       #include <unistd.h>

       int truncate(const char *path, off_t length);


DESCRIPTION
       The truncate() function shall cause the regular file named by path to have a size which shall be equal to
       length bytes.

       If the file previously was larger than length, the extra data is discarded. If the  file  was  previously
       shorter than length, its size is increased, and the extended area appears as if it were zero-filled.

       The application shall ensure that the process has write permission for the file.

       If  the request would cause the file size to exceed the soft file size limit for the process, the request
       shall fail and the implementation shall generate the SIGXFSZ signal for the process.

       This function shall not modify the file offset for any open file descriptions associated with  the  file.
       Upon successful completion, if the file size is changed, this function shall mark for update the st_ctime
       and st_mtime fields of the file, and the S_ISUID and S_ISGID bits of the file mode may be cleared.

RETURN VALUE
       Upon successful completion, truncate() shall return 0. Otherwise, -1 shall be returned, and errno set  to
       indicate the error.

ERRORS
       The truncate() function shall fail if:

       EINTR  A signal was caught during execution.

       EINVAL The length argument was less than 0.

       EFBIG or EINVAL
              The length argument was greater than the maximum file size.

       EIO    An I/O error occurred while reading from or writing to a file system.

       EACCES A  component  of  the  path  prefix denies search permission, or write permission is denied on the
              file.

       EISDIR The named file is a directory.

       ELOOP  A loop exists in symbolic links encountered during resolution of the path argument.

       ENAMETOOLONG
              The length of the path argument  exceeds  {PATH_MAX}  or  a  pathname  component  is  longer  than
              {NAME_MAX}.

       ENOENT A component of path does not name an existing file or path is an empty string.

       ENOTDIR
              A component of the path prefix of path is not a directory.

       EROFS  The named file resides on a read-only file system.


       The truncate() function may fail if:

       ELOOP  More than {SYMLOOP_MAX} symbolic links were encountered during resolution of the path argument.

       ENAMETOOLONG
              Pathname  resolution  of  a  symbolic  link  produced  an intermediate result whose length exceeds
              {PATH_MAX}.


       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       open(), the Base Definitions volume of IEEE Std 1003.1-2001, <unistd.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE Std 1003.1, 2003 Edition,
       Standard  for  Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base
       Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of Electrical and Electronics Engineers,
       Inc  and  The  Open Group. In the event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The orig‚Äê
       inal Standard can be obtained online at http://www.opengroup.org/unix/online.html .



IEEE/The Open Group                                   2003                                          TRUNCATE(3P)
