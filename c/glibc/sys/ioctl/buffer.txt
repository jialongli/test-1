
printf fwrite 库函数会自带缓冲区，而 write 
系统调用没有带缓冲区。另外，我们这里所说的缓冲区，
都是用户级缓冲区。其实为了提升整机性能，OS也会提供相关内核级缓冲区，不过不再我们
讨论范围之内。
那这个缓冲区谁提供呢？ printf fwrite 是库函数， write 
是系统调用，库函数在系统调用的“上层”， 是对系统
调用的“封装”，但是 write 没有缓冲区，而 printf fwrite 
有，足以说明，该缓冲区是二次加上的，又因为是C，所以由C标准库提供。

————————————————
版权声明：本文为CSDN博主「Miss_Monster」的原创文章，遵循 CC 4.0 BY-SA 
版权协议，转载请附上原文出处链接及本声明。

原文链接：https://blog.csdn.net/Miss_Monster/article/details/86479145
