epoll的总结之四LT和ET使用EPOLLONESHOT

https://blog.csdn.net/liuhengxiao/article/details/46911129
-------------------------------------------------------

在前面说过，epoll有两种触发的方式即LT（水平触发）和ET（边缘触发）两种，在前者，
只要存在着事件就会不断的触发，直到处理完成，而后者只触发一次相同事件或者说只在
从非触发到触发两个状态转换的时候儿才触发。


这会出现下面一种情况，如果是多线程在处理，一个SOCKET事件到来，数据开始解析，
这时候这个SOCKET又来了同样一个这样的事件，而你的数据解析尚未完成，那么程序会
自动调度另外一个线程或者进程来处理新的事件，这造成一个很严重的问题，不同的线程或者进程在处
理同一个SOCKET的事件，这会使程序的健壮性大降低而编程的复杂度大大增加！！即使在ET模
式下也有可能出现这种情况！！


解决这种现象有两种方法，一种是在单独的线程或进程里解析数据，也就是说，
接收数据的线程接收到数据后立刻将数据转移至另外的线程。


第一种方法
第二种方法就是本文要提到的EPOLLONESHOT这种方法，可以在epoll上注册这个事件，注册这个事
件后，如果在处理写成当前的SOCKET后不再重新注册相关事件，那么这个事件就不再响应了
或者说触发了。要想重新注册事件则需要调用epoll_ctl重置文件描述符上的事件，这样前面的
socket就不会出现竞态这样就可以通过手动的方式来保证同一SOCKET只能被一个线程处理，不会
跨越多个线程。