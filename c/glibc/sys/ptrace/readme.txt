ptrace 介绍

作者 rtoax
日期 2020年12月21日

# 1. 调试断点
--------------------------------------------------------------
## 1.1. 调试断点
--------------------------------------------------------------
	80386 可支持同时设置四个断点条件，编程人员可在程序中的 4 
	个位置设置条件，使其转向异常处理程序。这四个断点的每个断点，
	都可以是如下三种不同类型的任何一种：
	 1)只在指令地址与断点地址一致时，断点有效
	 2)数据写入地址与断点地址一致时，断点有效
	 3)数据读出地址或数据写入地址与断点地址一致时，断掉有效


## 1.2. 调试寄存器
--------------------------------------------------------------
    x86 提供的8个调试寄存器(DR0-DR7)

    DR0-DR3: 存放断点地址寄存器
    DR4,DR5: 保留寄存器，不使用
    DR6:     状态寄存器
    ----------------------------------------------------------
		DR6寄存器各位的功能
		Bits[3:0]	当断点线性地址寄存器规定的条件被检测到时，将对应的
					Bits[3:0] 位 置 1. 置位Bits[3:0]与断点条件是否被
					启用无关。即Bits[3:0]的某位被置 1，并不表示要进行
					对应的断点异常处理。
					
		BD	如下一条指令要对 8 个调试寄存器之一进行读写时，在指令的边界BD
			位置被置 1.在一条指令内，每当即将读写调试寄存器时，也 BD 位置 1.
			BD 位置 1 与 DR7 中 GD 位启用与否 无关。

		BS	如果单步异常发生时，BS位被置1.  单步条件由 EFLAGS 寄存器中的 TF 位启用。
			如果程序由于单步条件进入调试处理程序， 则 BS 位置  1. 与 DR6 中的其他
			位不同的是，BS 位只在单步陷阱实际发生时才置位，而不是 检测到单步条件
			就置位。

		BT	BT 位对任务切换导致 TSS 中的调试陷阱位被启用而造成的调试异常，指示其原因。
			对这一条件，在 DR7 中没有启用位。

		DR6 中的各个标志位，在处理机的各种起初操作中不收影响，因此，调试异常处理程序
			在运行以前，应清楚 DR6 ，以免下一次检测到异常条件时，收到原来的 DR6 
			中状态为的影响。
			
    

    DR7:     控制寄存器，标志位如下：
    ----------------------------------------------------------
                                         | Type | Length |
                                         |              /
                                         |             /
                                         |            /
                                         |           /
                                         |          /
                                         |         /
                                         |        /
                                         |       /
                                         |      /
                                         |     |
                                          16 18 20 22 24 26 28 30
         0 1 2 3 4 5 6 7       8-15       17 19 21 23 25 27 29 31
        |L|G|L|G|L|G|L|G|                |T |L |T |L |T |L |T |L |
        +--------------------------------------------------------+
        |D|D|D|D|D|D|D|D|               |D |D |D |D |D |D |D |D |
        |R|R|R|R|R|R|R|R|                |R |R |R |R |R |R |R |R |
        |0|0|1|1|2|2|3|3|                |0 |0 |1 |1 |2 |2 |3 |3 |
             是否激活                       Type: 断点类型 (00 execute, 01 write, 11 read-write)
                                        Length: 断点长度 (00 1-byte, 01 2-bytes, 11 4-bytes)

## 1.3. 断点地址识别
--------------------------------------------------------------
	LEN 字段和断点线性地址的组合，规定调试异常检查的四个线性地址的范围。
	上面已经降到，断点线性地址必须对齐于 LEN 规定的多字节长度的相应长度边界。
	事实上，处理器在检查断点时，根据 LEN 规定的长度，忽略线性地址的响应低位。
	例如，当 LEN=11 时，线性地址的最低两位被忽略，即吧线性地址最低两位视为 00 ，
	因而按照 四字节边界对齐。
	而当 LEN=01 
	时，线性地址最低位被忽略，即吧线性地址的最低位视为0，因而按两字节边界对齐。

	对于由断点线性地址 及 LEN 规定的地址范围内类型正确的任何字节的访问都产生异常。
	数据的访问和指令的取出，都要按所有四个断点地址范围进行检查。
	如果断点地址范围的任何字节匹配，访问的类型页匹配，则断点异常被报告。
	下表给出了识别数据断点的几个例子，这里假设所有断点被启用，而且设置了正确的访问类型。

						地址		长度		长度		断点
	---------------------------------------------------------------------------
	寄存器	DR0 		00FF02		1			LEN=00		
	内容	DR1 		00CC32		2			LEN=01
			DR2			0D0004		4			LEN=11
			DR3			01FF00		4			LEN=11
	---------------------------------------------------------------------------
	引起异常			00FF02		1						B0=1
	的访问				00CC33		1						B1=1
						0D0007		2						B2=1
						00FEFF		3						B0=1
						01FF00		4						B3=1
						01FF03		4						B3=1
	---------------------------------------------------------------------------
	不引起异常			00FF01		1
	的访问				00FF00		2
						00CC34		1
						01FeFF		1
						0D0000		4

## 1.4. 代码断点 和 数据断点 的比较
--------------------------------------------------------------
	指令访问断点 和 数据访问断点之间有如下区别
	1. 在 RWD 字段的设置不同，指令断点， RWE=00；数据断点， RWE!=0
	2. LEN 的设置不同。指令断点长度 LEN=00(一个字节)，数据断点长度可以为 1,2,4字节
		由于很多指令的长度超过一个字节（事实上，指令长度为1-15个字节），所以指令断点必须设置在指令的第一个字节

	3. 指令断点属于故障类型，数据断点属于陷阱类型（SIGTRAP）。
		指令断点在执行前被检测报告，数据断点在读写后进行检测报告。


# 2. TSS中的调度陷阱 （TSS 任务状态段 task state segment）

详情见 *** test/x86_64/TSS.txt ***
--------------------------------------------------------------
每当通过 TSS 发生任务切换时，TSS 中的 T位 
使调试处理程序被调用，这就为调试程序管理某些任务的活动提出了一种方便的方法。
DR6 中的 BT 位 指示对该位的检测， DR7 中对该位没有特别的启用位。
如果调试处理程序是通过任务门使用的，则不能设置对应 TSS 
的调试陷阱位。否则，将发生调试处理程序的无线循环。


# 3. INT3 断点指令
--------------------------------------------------------------



MORE 


