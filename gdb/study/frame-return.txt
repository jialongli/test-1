修改函数返回值

gcc test-foo.c -g
------------------------------------------------
  1 #include <stdio.h>
  2 #include <malloc.h>
  3 #include <stdlib.h>
  4 
  5 int foo(int a) {
  6 //    printf("foo a = %d\n", a);
  7     return a+1;
  8 }
  9 int foo2(int a, int b) {
 10 //    printf("foo2 a = %d, b = %d\n", a, b);
 11     return foo(a)+foo(b);
 12 }
 13 
 14 int main(int argc, char *argv[]) {
 15     int a = foo2(1, 1);
 16     return 0;
 17 }
------------------------------------------------

[root@localhost study]# gdb a.out 
(gdb) break foo
Breakpoint 1 at 0x4004f4: file test-foo.c, line 7.
(gdb) break 16
Breakpoint 2 at 0x40054b: file test-foo.c, line 16.
(gdb) r
Breakpoint 1, foo (a=1) at test-foo.c:7
7	    return a+1;
(gdb) return 100
Make foo return now? (y or n) y
#0  0x0000000000400515 in foo2 (a=1, b=1) at test-foo.c:11
11	    return foo(a)+foo(b);
(gdb) c
Continuing.

Breakpoint 1, foo (a=1) at test-foo.c:7
7	    return a+1;
(gdb) return 200
Make foo return now? (y or n) y
#0  0x0000000000400521 in foo2 (a=1, b=1) at test-foo.c:11
11	    return foo(a)+foo(b);
(gdb) c
Continuing.

Breakpoint 2, main (argc=1, argv=0x7fffffffdb78) at test-foo.c:16
16	    return 0;
(gdb) print a
$1 = 300
(gdb)  

