
//	num_ops (uint64_t): Total number of lock acquisition operations on this mutex.
//
//	num_spin_acq (uint64_t): Number of times the mutex was spin-acquired. When the mutex is currently locked and cannot 
//		be acquired immediately, a short period of spin-retry within jemalloc will be performed. Acquired through spin 
//		generally means the contention was lightweight and not causing context switches.
//
//
//	num_wait (uint64_t): Number of times the mutex was wait-acquired, which means the mutex contention was not solved by 
//		spin-retry, and blocking operation was likely involved in order to acquire the mutex. This event generally implies 
//		higher cost / longer delay, and should be investigated if it happens often.
//
//
//	max_wait_time (uint64_t): Maximum length of time in nanoseconds spent on a single wait-acquired lock operation. Note 
//		that to avoid profiling overhead on the common path, this does not consider spin-acquired cases.
//
//
//	total_wait_time (uint64_t): Cumulative time in nanoseconds spent on wait-acquired lock operations. Similarly, spin-
//		acquired cases are not considered.
//
//
//	max_num_thds (uint32_t): Maximum number of threads waiting on this mutex simultaneously. Similarly, spin-acquired 
//		cases are not considered.
//
//
//	num_owner_switch (uint64_t): Number of times the current mutex owner is different from the previous one. This event 
//		does not generally imply an issue; rather it is an indicator of how often the protected data are accessed by 
//		different threads.
//
//    num_ops           0
//    num_wait          1
//    num_spin_acq      2
//    num_owner_switch  3
//    total_wait_time   4
//    max_wait_time     5
//    max_num_thds      6