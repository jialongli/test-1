当今时代，随着大数据和云计算的爆炸式增长，宽带的普及以及个人终端网络数据的日
益提高，对电信服务节点和数据中心的数据交换能力和网络带宽提出了更高的要求。并且，
数据中心本身对虚拟化功能的需求也增加了更多的网络带宽需求。电信服务节点和数据中心
为了应付这种需求，需要对内部的各种服务器资源进行升级。在这种环境下，英特尔公司提
出了Intel® DDIO（Data Direct I/O）的技术。该技术的主要目的就是让服务器能更快处理网络
接口的数据，提高系统整体的吞吐率，降低延迟，同时减少能源的消耗。但是，DDIO 是如
何做到这种优化和改进的呢？为了回答这个问题，有必要回顾一下DDIO 技术出现之前，服
务器是如何处理从网络上来的数据的。


当一个网络报文送到服务器的网卡时，网卡通过外部总线（比如PCI 总线）把数据和报
文描述符送到内存。接着，CPU 从内存读取数据到Cache 进而到寄存器。进行处理之后，再
写回到Cache，并最终送到内存中。最后，网卡读取内存数据，经过外部总线送到网卡内部，
最终通过网络接口发送出去。
可以看出，对于一个数据报文，CPU 和网卡需要多次访问内存。而内存相对CPU 来讲
是一个非常慢速的部件。CPU 需要等待数百个周期才能拿到数据，在这过程中，CPU 什么也
做不了。

-------------------------------------------------------
DDIO 技术是如何改进的呢？

这种技术使外部网卡和CPU 通过LLC Cache 直接交换数
据，绕过了内存这个相对慢速的部件。这样，就增加了CPU 处理网络报文的速度（减少了
CPU 和网卡等待内存的时间），减小了网络报文在服务器端的处理延迟。这样做也带来了一
个问题，因为网络报文直接存储在LLC Cache 中，这大大增加了对其容量的需求，因而在英
特尔的E5 处理器系列产品中，把LLC Cache 的容量提高到了20MB。

DDIO 功能模块会学习来自I/O 设备的读写请求，也就是I/O 对内存的读或者写的请求。
例如，当网卡需要从服务器端传送一个数据报文到网络上时，它会发起一个I/O 读请求（读
数据操作），请求把内存中的某个数据块通过外部总线送到网卡上；当网卡从网络中收到
一个数据报文时，它会发起一个I/O 写请求（写数据操作），请求把某个数据块通过外部
总线送到内存中某个地址上。
