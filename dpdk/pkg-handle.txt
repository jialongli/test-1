DPDK 中的预取

在讨论之前，我们需要了解另外一个和性能相关的话题。DPDK 一个处理器核每秒钟大
概能够处理33M 个报文，大概每30 纳秒需要处理一个报文，假设处理器的主频是2.7GHz，
那么大概每80 个处理器时钟周期就需要处理一个报文。那么，处理报文需要做一些什么事
情呢？以下是一个基本过程。

1）写接收描述符到内存，填充数据缓冲区指针，网卡收到报文后就会根据这个地址把
报文内容填充进去。
2）从内存中读取接收描述符（当收到报文时，网卡会更新该结构）（内存读），从而确认
是否收到报文。
3）从接收描述符确认收到报文时，从内存中读取控制结构体的指针（内存读），再从内
存中读取控制结构体（内存读），把从接收描述符读取的信息填充到该控制结构体。
4）更新接收队列寄存器，表示软件接收到了新的报文。
5）内存中读取报文头部（内存读），决定转发端口。
6）从控制结构体把报文信息填入到发送队列发送描述符，更新发送队列寄存器。
7）从内存中读取发送描述符（内存读），检查是否有包被硬件传送出去。
8）如果有的话，从内存中读取相应控制结构体（内存读），释放数据缓冲区。

因此，DPDK 必须保证所有需要读取的数据都在Cache 中，否则一旦出现Cache 不命中，
性能将会严重下降。为了保证这点，DPDK 采用了多种技术来进行优化，预取只是其中的
一种。
