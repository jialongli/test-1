# Comment Rong Tao @Sylincom Beijing, 2020年 01月 19日 星期日 17:13:49 CST. 
# Copyright (C) Rong Tao @Sylincom Beijing, 2020年 01月 19日 星期日 17:11:44 CST. 
策略模式
策略模式就是用统一的方法接口分别对不同类型的数据进行访问。比如说，现在我们
想用pc 看一部电影，此时应该怎么做呢？看电影嘛，当然需要各种播放电影的方法。rmvb
要rmvb 格式的方法，avi 要avi 的方法,mpeg 要mpeg 的方法。可是事实上，我们完全可以
不去管是什么文件格式。因为播放器对所有的操作进行了抽象，不同的文件会自动调用相应
的访问方法。
typedef struct _MoviePlay
{
	struct _CommMoviePlay* pCommMoviePlay;
}MoviePlay;
这个时候呢，对于用户来说，统一的文件接口就是MoviePlay。接下来的一个工作，就
是编写一个统一的访问接口。
void play_movie_file(struct MoviePlay* pMoviePlay)
{
	CommMoviePlay* pCommMoviePlay;
	assert(NULL != pMoviePlay);
	pCommMoviePlay = pMoviePlay->pCommMoviePlay;
	pCommMoviePlay->play(pCommMoviePlay->hFile);
}
最后的工作就是对不同的hFile 进行play 的实际操作，写简单一点就是，
void play_avi_file(HANDLE hFile)
{
	printf("play avi file!\n");
}
void play_rmvb_file(HANDLE hFile)
{
	printf("play rmvb file!\n");
}
void play_mpeg_file(HANDLE hFile)
{
	printf("play mpeg file!\n");
}


