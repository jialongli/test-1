# Comment Rong Tao @Sylincom Beijing, 2020年 01月 19日 星期日 17:13:49 CST. 
# Copyright (C) Rong Tao @Sylincom Beijing, 2020年 01月 19日 星期日 17:11:44 CST. 
装饰模式
装饰模式是比较好玩，也比较有意义。其实就我个人看来，它和责任链还是蛮像的。
只不过一个是比较判断，一个是迭代处理。装饰模式就是那种迭代处理的模式，关键在哪呢？
我们可以看看数据结构。
typedef struct _Object
{
	struct _Object* prev;
	void (*decorate)(struct _Object* pObject);
}Object;
装饰模式最经典的地方就是把pObject 这个值放在了数据结构里面。当然，装饰模式的
奥妙还不仅仅在这个地方，还有一个地方就是迭代处理。我们可以自己随便写一个
decorate 函数试试看，
void decorate(struct _Object* pObeject)
{
	assert(NULL != pObject);
	if(NULL != pObject->prev)
		pObject->prev->decorate(pObject->prev);
	printf("normal decorate!\n");
}
所以，装饰模式的最重要的两个方面就体现在：prev 参数和decorate 迭代处理。


