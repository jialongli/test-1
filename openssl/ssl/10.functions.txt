# Comment Rong Tao @Sylincom Beijing, 2020年 01月 19日 星期日 17:07:20 CST. 

31.10 函数

	1） SSL_accept
		对应于 socket 函数accept，该函数在服务端调用，用来进行SSL 握手。
		
	2） int SSL_add_client_CA(SSL *ssl,X509 *x)
		添加客户端CA 名。
		
	3） const char *SSL_alert_desc_string_long(int value)
		根据错误号得到错误原因。
		
	4） SSL_check_private_key
		检查SSL 结构中的私钥。
		
	5） SSL_CIPHER_description
		获取SSL 加密套件描述。
		
	6） SSL_CIPHER_get_bits
		获取加密套件中对称算法的加密长度。
		
	7） SSL_CIPHER_get_name
		得到加密套件的名字。
		
	8） SSL_CIPHER_get_version
		根据加密套件获取SSL协议版本。
		
	9） SSL_clear
		清除SSL 结构。
		
	10) SSL_connect
		对应于 socket 函数connect，该函数在客户端调用，用来进行SSL 握手。
		
	11) SSL_CTX_add_client_CA
		给SSL_CTX 添加客户端CA。
		
	12) int SSL_CTX_add_session(SSL_CTX *ctx, SSL_SESSION *c)
		往SSL_CTX 添加session。
		
	13) SSL_CTX_check_private_key
		检查私钥。
		
	14) SSL_CTX_free
		释放SSL_CTX 空间。
		
	15) long SSL_CTX_get_timeout(const SSL_CTX *s)
		获取超时时间。
		
	16) SSL_CTX_get_verify_callback
		获取证书验证回调函数。
		
	17) SSL_CTX_get_verify_depth
		获取证书验证深度。
		
	18）SSL_CTX_get_verify_mode
		获取验证方式，这些值在 ssl.h 中定义如下：
		
			#define SSL_VERIFY_NONE 				0x00
			#define SSL_VERIFY_PEER 				0x01
			#define SSL_VERIFY_FAIL_IF_NO_PEER_CERT 0x02
			#define SSL_VERIFY_CLIENT_ONCE 			0x04
		
	19）SSL_get_current_cipher
		获取当前的加密套件。
		
	20）SSL_get_fd
		获取链接句柄。
		
	21）SSL_get_peer_certificate
		获取对方证书。
		
	22）XXX_client/server_method
		获取各个版本的客户端和服务端的 SSL 方法。
		
	23）SSL_read
		读取数据。
		
	24) SSL_write
		发送数据。
		
	25）SSL_set_fd
		设置 SSL 的链接句柄。
		
	26）SSL_get_current_compression
		获取当前的压缩算法的 COMP_METHOD。
		
	27）SSL_get_current_expansion
		获取当前的解压算法的 COMP_METHOD。
		
	28）SSL_COMP_get_name
		获取压缩/解压算法的名称。
		
	29）SSL_CTX_set/get_ex_data
		设置/读取用户扩展数据。
		
	30）SSL_dup
		复制函数。
		
	31）SSL_get_default_timeout
		获取默认超时时间。
		
	32）SSL_do_handshake
		进行 ssl 握手。

